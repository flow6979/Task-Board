security:
    
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Admin:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
# <<<<<<< HEAD
#             custom_authenticator: App\Security\LoginFormAuthenticator
#             logout:
#                 path: app_logout
#                 # where to redirect after logout
#                 # target: app_any_route
# =======

            logout:
                path: app_logout
            form_login:
                login_path: app_login
                check_path: app_login
                success_handler: App\Security\JWTAuthenticationSuccessHandler
                # target: admin_dashboard
                

                # where to redirect after logout
                
        login:
            pattern: ^/
                # anonymous: false
                custom_authenticator: App\Security\JWTAuthenticationSuccessHandler
                logout:
                    path: app_login
                    target: app_login
            # pattern: ^/api/login
            # stateless: true
            # json_login:
            #     check_path: /api/login_check
            #     success_handler: lexik_jwt_authentication.handler.authentication_success
            #     failure_handler: lexik_jwt_authentication.handler.authentication_failure

            # default_target_path: after_login_route_name
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
# <<<<<<< HEAD
#     # access_control:
#         # - { path: ^/task, roles: ROLE_USER }
# =======
    access_control:
        # - { path: ^login, roles: PUBLIC_ACCESS }
        # - { path: ^/api/admin, roles: ROLE_ADMIN }
        # - { path: ^/api/home, roles: ROLE_USER }
        # - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/home, roles: ROLE_USER }
        # - { path: ^/, roles: PUBLIC_ACCESS }
        # - { path: ^/, roles: ROLE_ADMIN }
        - { path: ^/login, roles: PUBLIC_ACCESS } 

        # Allow access to other areas for authenticated users (ROLE_USER)
        
# 
        # - { path: ^/login, roles: PUBLIC_ACCESS }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }


when@test:
    security:
       password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
